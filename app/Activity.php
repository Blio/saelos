<?php

namespace App;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;

/**
 * App\Activity
 *
 * @property-read \Illuminate\Database\Eloquent\Model|\Eloquent $details
 * @property-read \App\User $user
 * @mixin \Eloquent
 */
class Activity extends Model implements SearchableInterface
{
    protected $fillable = [
        'title',
        'description',
        'due_date',
        'details_type',
        'details_id',
        'user_id'
    ];

    protected $dates = [
        'created_at',
        'updated_at',
        'due_date',
        'fulfillment_date',
    ];

    protected $guarded = [
        'id'
    ];

    public static function search(string $searchString, Builder $builder): Builder
    {
        $searchArray = static::parseSearchString($searchString);

        $builder->where(function(Builder $q) use ($searchArray) {
            if ($userId = $searchArray['user_id']) {
                $q->orWhere('user_id', $userId);
            }
        });

        return $builder;
    }

    public static function parseSearchString(string $searchString): array
    {
        return [
            'user_id' => $searchString,
            'modified_since' => null
        ];
    }

    public function deal()
    {
        return $this->morphedByMany(Deal::class, 'entity', 'activity_entities');
    }

    public function person()
    {
        return $this->morphedByMany(Person::class, 'entity', 'activity_entities');
    }

    public function company()
    {
        return $this->morphedByMany(Company::class, 'entity', 'activity_entities');
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function details()
    {
        return $this->morphTo();
    }

    public function toArray()
    {
        return parent::toArray(); // TODO: Change the autogenerated stub
    }
}

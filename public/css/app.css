.chartist-tooltip {
  position: absolute;
  display: inline-block;
  opacity: 0;
  min-width: 5em;
  padding: .5em;
  background: #F4C63D;
  color: #453D3F;
  font-family: Oxygen,Helvetica,Arial,sans-serif;
  font-weight: 700;
  text-align: center;
  pointer-events: none;
  z-index: 1;
  -webkit-transition: opacity .2s linear;
  transition: opacity .2s linear; }
  .chartist-tooltip:before {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    width: 0;
    height: 0;
    margin-left: -15px;
    border: 15px solid transparent;
    border-top-color: #F4C63D; }
  .chartist-tooltip.tooltip-show {
    opacity: 1; }

.ct-area, .ct-line {
  pointer-events: none; }

/*# sourceMappingURL=chartist-plugin-tooltip.css.map */
@charset "UTF-8";@font-face{font-family:Notification;src:url(/fonts/vendor/react-notifications/dist/notification.eot?c0d3c94cd6112550c51d7d1ed13b9da1);src:url(/fonts/vendor/react-notifications/dist/notification.eot?c0d3c94cd6112550c51d7d1ed13b9da1?#iefixs3g3t9) format("embedded-opentype"),url(/fonts/vendor/react-notifications/dist/notification.woff?651771e1df95c807c99608188d0a4287) format("woff"),url(/fonts/vendor/react-notifications/dist/notification.ttf?0b4ac1dc75df35e169b70d7719afe4cc) format("truetype"),url(/fonts/vendor/react-notifications/dist/notification.svg?5bee74caefdf9d0a834915f6c8eeb259#notification) format("svg");font-weight:400;font-style:normal}.notification-container{position:fixed;top:0;right:0;z-index:999999;width:320px;padding:0 15px;max-height:calc(100% - 30px);overflow-x:hidden;overflow-y:auto}.notification,.notification-container{-webkit-box-sizing:border-box;box-sizing:border-box}.notification{padding:15px 15px 15px 58px;border-radius:2px;color:#fff;background-color:#ccc;-webkit-box-shadow:0 0 12px #999;box-shadow:0 0 12px #999;cursor:pointer;font-size:1em;line-height:1.2em;position:relative;opacity:.9;margin-top:15px}.notification .title{font-size:1em;line-height:1.2em;font-weight:700;margin:0 0 5px}.notification:focus,.notification:hover{opacity:1}.notification-enter{visibility:hidden;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}.notification-enter.notification-enter-active{-webkit-transition:all .4s;transition:all .4s}.notification-enter.notification-enter-active,.notification-leave{visibility:visible;-webkit-transform:translateZ(0);transform:translateZ(0)}.notification-leave.notification-leave-active{visibility:hidden;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);-webkit-transition:all .4s;transition:all .4s}.notification:before{position:absolute;top:50%;left:15px;margin-top:-14px;display:block;font-family:Notification;width:28px;height:28px;font-size:28px;text-align:center;line-height:28px}.notification-info{background-color:#2f96b4}.notification-info:before{content:"\F05A"}.notification-success{background-color:#51a351}.notification-success:before{content:"\F058"}.notification-warning{background-color:#f89406}.notification-warning:before{content:"\F06A"}.notification-error{background-color:#bd362f}.notification-error:before{content:"\F057"}/**
 * Index
 *
 * 01. Libraries
 * 02. Elements
 * 03. Structure
 * 04. Sidebar
 * 05. Forms
 * 06. Buttons
 * 07. Tables
 * 08. Title
 * 09. Pagination
 * 10. Toolbar
 * 11. Progress
 * 12. Dashboard
 * 13. Filter
 * 14. Panel
 * 15. Stats
 * 16. Box
 * 17. Infobox
 * 18. Cards
 * 19. Chartist
 * 20. Invoice
 * 21. Headquarters
 * 22. Stacks
 * 23. Shortcuts
 * 24. Empty
 * 25. Page header
 * 26. Footer
 */

/**
 * 01. Libraries
 */

/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */

figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */

details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 */

canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */

template {
  display: none;
}

/* Hidden
   ========================================================================== */

/**
 * Add the correct display in IE 10-.
 */

[hidden] {
  display: none;
}

/**
 * 02. Elements
 */

html {
  height: 100%;
}

body {
  -webkit-font-smoothing: antialiased;
  color: #455A64;
  font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  font-size: 14px;
  height: 100%;
}

a {
  color: #455A64;
  text-decoration: none;
}

.md-icon {
  -webkit-font-smoothing: antialiased;
  font-family: 'Material Icons';
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: "liga" 1;
          font-feature-settings: "liga" 1;
  font-style: normal;
  text-transform: none;
  line-height: 1;
  font-size: 20px;
  width: 20px;
  height: 20px;
  display: inline-block;
  overflow: hidden;
}

.icons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0 -10px;
}

.icon {
  border: 1px solid rgba(62, 62, 62, 0.06);
  margin: 10px;
  padding: 16px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin: 0 -15px;
}

.row > div {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  margin: 0 15px;
  width: 50%;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

/**
 * 03. Structure
 */

.page-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 100%;
}

.page-inner {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 100%;
  width: 100%;
}

.main {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.content-inner {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  padding: 30px 45px;
}

.content-inner.no-padding-left {
  padding-left: 0;
}

.content-inner.no-padding-right {
  padding-right: 0;
}

.content-inner.no-padding-top {
  padding-top: 0;
}

@media (max-width: 1281px) {
  .content-inner {
    width: calc(100vw - 319px);
  }
}

@media (max-width: 992px) {
  .content-inner {
    padding: 30px 30px;
  }
}

.flex-row-even {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.flex-row-even > div {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  margin: 0px;
}

.flex-row-nospace {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.flex-row-nospace > div {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  margin: 20px auto;
}

.avatar {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  border-radius: 50%;
  display: inline-block;
  height: 44px;
  margin: 0 20px 0 0;
  vertical-align: middle;
  width: 44px;
}

.accounts .infobox-header-content,
.opportunities .infobox-header-content {
  cursor: pointer;
}

.my-vector > div {
  margin: 10px 0;
  cursor: pointer;
}

/**
 * 04. Sidebar
 */

.sidebar-subtitle {
  font-size: 13px;
  margin: 1px 0 0 0;
  opacity: .6;
}

.sidebar-title {
  line-height: 37px;
  margin: 0 0 1px 0;
}

.sidebar .sidebar-title-content {
  background-color: #fff;
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.12);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.12);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 14px;
  padding: 21px 24px 24px 24px;
  position: absolute;
  right: -10px;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  top: 0;
  width: 240px;
  z-index: -1;
}

.sidebar .sidebar-title-content .form-control {
  font-size: 13px;
  height: 32px;
  line-height: 32px;
  padding: 0 12px;
}

.sidebar .sidebar-title-content form {
  margin: 0;
}

.sidebar .sidebar-title-content ul {
  margin: 12px 0;
  padding: 0;
}

.sidebar .sidebar-title-content ul li {
  cursor: pointer;
  display: block;
  margin: 0;
  opacity: .7;
  padding: 10px 0;
}

.sidebar .sidebar-title-content ul li:hover {
  color: #455A64;
  opacity: 1;
}

.sidebar-title-content {
  display: none;
}

.sidebar-title-content-open .sidebar-title-content {
  display: block;
}

.sidebar-title-content-label {
  font-size: 11px;
  font-weight: 600;
  margin: 0 0 10px 0;
  text-transform: uppercase;
  white-space: nowrap;
}

.sidebar-title-content-body-more {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
  margin: 0 -24px -8px -24px;
  padding: 16px 24px 0 24px;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.sidebar-title-content-body-more:hover {
  color: #78909C;
}

.sidebar-action {
  position: absolute;
  right: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.sidebar-title-inner {
  border-bottom: 1px solid rgba(0, 0, 0, 0.03);
  margin: -20px -10px 20px -10px;
  padding: 20px 22px 16px 22px;
}

.open .sidebar-title-inner {
  background-color: rgba(0, 0, 0, 0.04);
}

.sidebar {
  background-color: rgba(0, 0, 0, 0.04);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 20px 10px;
  position: relative;
  min-width: 260px;
  width: 260px;
  z-index: 100;
}

@media (max-width: 1281px) {
  .sidebar {
    display: none;
  }
}

.sidebar h1 {
  cursor: pointer;
  font-size: 20px;
  font-weight: 400;
  margin: 0;
  padding: 0;
  position: relative;
}

.sidebar .navigation > strong {
  display: block;
  font-size: 11px;
  line-height: 41px;
  margin: 0 0 5px 0;
  opacity: .8;
  padding: 0 14px;
  text-transform: uppercase;
}

.sidebar ul {
  list-style: none;
  margin: 0;
  padding: 0;
  position: relative;
}

.sidebar ul ul {
  margin: 5px 0 0 0;
  padding: 0 0 0 48px;
}

.sidebar ul ul:before {
  bottom: 7px;
  border-left: 1px dashed #455A64;
  content: '';
  display: block;
  left: 22px;
  opacity: .2;
  position: absolute;
  top: 7px;
  width: 0;
}

.sidebar ul ul a {
  display: block;
  line-height: 41px;
  max-height: 41px;
  padding: 0;
}

.sidebar ul ul a.active {
  background-color: transparent;
}

.sidebar li {
  margin: 0 0 8px 0;
  position: relative;
}

.sidebar a {
  display: block;
  line-height: 20px;
  padding: 10px 14px;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.sidebar a.active {
  background-color: rgba(0, 0, 0, 0.04);
  color: #455A64;
}

.sidebar a:hover {
  color: #455A64;
}

.sidebar a i {
  color: #455A64;
  margin: 0 10px 0 0;
  vertical-align: middle;
}

.sidebar a span {
  vertical-align: middle;
}

.sidebar a strong {
  background-color: #EE5342;
  border-radius: 50%;
  display: block;
  font-size: 0;
  height: 5px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  right: 15px;
  width: 5px;
}

.sidebar a strong:after {
  border: 2px solid rgba(238, 83, 66, 0.3);
  border-radius: 50%;
  content: '';
  display: block;
  height: 9px;
  left: -4px;
  position: absolute;
  top: -4px;
  width: 9px;
}

/**
 * 05. Forms
 */

form {
  margin: 0 0 30px 0;
}

form:after {
  content: " ";
  display: block;
  clear: both;
}

form input {
  -webkit-appearance: none;
  -moz-appearance: none;
  border: none;
  outline: none;
  display: block;
}

form label {
  text-transform: uppercase;
  font-weight: bold;
}

form .input-container {
  margin: 10px 0;
  padding: 4px;
}

form .input-container input {
  width: 100%;
}

form .input-container.focused {
  border: 1px solid rgba(79, 98, 119, 0.7);
  padding: 3px;
}

form .input-container.focused input:placeholder-shown {
  content: "...";
  color: rgba(174, 190, 197, 0.9);
}

.form-control {
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.08);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.06);
          box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  color: #455A64;
  height: 36px;
  line-height: 36px;
  padding: 0 16px;
  width: 100%;
}

.form-control:focus {
  outline: 0;
}

.form-group {
  margin: 0 0 15px 0;
}

.form-group:after {
  content: " ";
  display: block;
  clear: both;
}

.form-group.form-group-description {
  line-height: 24px;
  padding: 6px 0;
}

@media (min-width: 992px) {
  .form-inline .form-group {
    width: 23.72881356%;
    float: left;
    margin-right: 1.69491525%;
    float: left;
  }

  .form-group.form-group-description {
    width: 49.15254237%;
    float: left;
    margin-right: 1.69491525%;
  }
}

.form-group:last-child {
  margin-bottom: 0;
}

.form-group.inline {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.form-group.inline label {
  margin: 0 15px 0 0;
  width: 120px;
}

.form-group.inline .input {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.form-group small {
  background-color: rgba(0, 0, 0, 0.03);
  color: rgba(69, 90, 100, 0.6);
  display: block;
  font-size: 13px;
  line-height: 1.5;
  margin: 10px 0 0 0;
  padding: 12px 16px;
}

fieldset {
  border: 1px solid rgba(0, 0, 0, 0.08);
  padding: 20px;
}

fieldset legend {
  border-bottom: 1px solid rgba(0, 0, 0, 0.08);
  float: left;
  font-weight: 500;
  margin: 0 0 20px 0;
  padding: 0 0 20px 0;
  width: 100%;
}

.form-check input {
  margin: 0 10px 0 0;
}

.form-group-button-description {
  float: left;
  line-height: 36px;
}

.form-group-button-description a {
  text-decoration: underline;
}

.form-description {
  border: 1px solid rgba(0, 0, 0, 0.06);
  padding: 30px;
}

.form-description .button-block:last-child {
  margin-bottom: 0;
}

/**
 * 06. Buttons
 */

label {
  cursor: pointer;
  display: block;
  margin: 0 0 7px 0;
}

button {
  cursor: pointer;
}

.button-group {
  white-space: nowrap;
}

.button-group > .button {
  margin-right: 4px;
}

.button-group > .button:last-child {
  margin-right: 0;
}

.button {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border: 0;
  display: inline-block;
  height: 36px;
  line-height: 36px;
  font-size: 14px;
  padding: 0 16px;
  text-align: center;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.button.danger {
  color: #EE5342;
}

.button.danger:hover {
  color: #EE5342;
}

.button-default {
  border: 1px solid rgba(0, 0, 0, 0.06);
  color: rgba(69, 90, 100, 0.7);
}

.button-primary {
  background-color: #455A64;
  color: #fff;
}

.button-primary:hover {
  background-color: #3b4c55;
}

.button-secondary {
  background-color: #78909C;
  color: #fff;
}

.button-secondary:hover {
  background-color: #6a8491;
}

.button-danger {
  background-color: #EE5342;
  color: #fff;
}

.button-danger:hover {
  background-color: #ec3e2b;
}

.button-facebook {
  background-color: #365397;
  color: #fff;
}

.button-facebook:hover {
  background-color: #3d5daa;
}

.button-google {
  background-color: #e0452c;
  color: #fff;
}

.button-google:hover {
  background-color: #d3381f;
}

.button-right {
  float: right;
}

.button-block {
  margin: 0 0 15px 0;
  text-align: center;
  width: 100%;
}

.button-dropdown {
  position: relative;
}

.button-dropdown:hover .md-icon {
  color: #3E3E3E;
}

.button-dropdown:hover ul {
  display: block;
}

.button-dropdown .md-icon {
  color: rgba(69, 90, 100, 0.5);
  cursor: pointer;
  padding: 10px;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.button-dropdown ul {
  background-color: #fff;
  border-radius: 2px 0 2px 2px;
  display: none;
  -webkit-filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.12));
          filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.12));
  list-style: none;
  margin: -3px 0 0 0;
  padding: 8px 0;
  position: absolute;
  right: 18px;
  width: 120px;
  z-index: 100;
}

.button-dropdown ul li {
  font-size: 13px;
}

.button-dropdown ul li a {
  display: block;
  padding: 2px 20px;
}

.button-dropdown ul:before {
  border: 3px solid transparent;
  border-bottom-color: #fff;
  border-right-color: #fff;
  content: '';
  display: block;
  height: 0;
  position: absolute;
  right: 0;
  top: -6px;
  width: 0;
}

/**
 * 07. Tables
 */

.table-responsive {
  overflow-x: auto;
  width: 100%;
}

table {
  margin: 0 0 40px 0;
  max-width: 100%;
  width: 100%;
}

table .min-width {
  width: 1px;
  white-space: nowrap;
}

table th,
table td {
  border-bottom: 1px solid rgba(0, 0, 0, 0.04);
  line-height: 20px;
  padding: 16px 20px;
  vertical-align: middle;
}

table th:first-child,
table td:first-child {
  padding-left: 0;
}

table th:last-child,
table td:last-child {
  padding-right: 0;
}

table th {
  font-size: 11px;
  font-weight: 700;
  padding-bottom: 12px;
  padding-top: 12px;
  text-transform: uppercase;
  text-align: left;
}

table .heading td {
  border-top: 1px solid rgba(0, 0, 0, 0.04);
  font-size: 12px;
  font-weight: 600;
  position: relative;
  text-transform: uppercase;
}

table .heading td:after {
  background-color: rgba(0, 0, 0, 0.04);
  bottom: 2px;
  content: '';
  display: block;
  height: 1px;
  left: 0;
  position: absolute;
  right: 0;
}

table td.new-lines {
  white-space: pre-wrap;
}

table td.actions {
  text-align: right;
  white-space: nowrap;
}

table td.actions .button-group {
  opacity: 0;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

table td .title-wrapper {
  display: inline-block;
  vertical-align: middle;
}

table td .title {
  font-weight: 500;
}

table td .subtitle {
  font-size: 13px;
  opacity: .5;
}

table td .progress {
  max-width: 300px;
}

table td .status {
  border: 2px solid rgba(62, 62, 62, 0.06);
  border-radius: 50%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  cursor: pointer;
  display: inline-block;
  height: 32px;
  overflow: hidden;
  margin: 0 20px 0 0;
  text-align: center;
  vertical-align: middle;
  width: 32px;
}

table td .status i {
  color: rgba(62, 62, 62, 0.3);
  font-size: 16px;
  height: 16px;
  margin-top: 40px;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
  width: 16px;
}

table td .status:hover i {
  margin: 6px 0 0 0;
}

table td .status.overdue {
  border-color: #EE5342;
}

table td .status.overdue:hover,
table td .status.upcoming:hover,
table td .status.today:hover {
  border-color: #32B67A;
}

table td .status.overdue:hover i,
table td .status.upcoming:hover i,
table td .status.today:hover i {
  color: #32B67A;
}

table td .status.completed {
  background-color: #32B67A;
  border-color: #32B67A;
}

table td .status.completed i {
  color: #fff;
  margin: 6px 0 0 0;
}

table td .status.in-progress {
  border-color: #FF5722;
}

table td .key-value span,
table td .key-value strong {
  display: block;
}

table td .key-value span {
  color: rgba(69, 90, 100, 0.5);
  font-size: 13px;
  margin: 0 0 3px 0;
}

table td .key-value strong {
  font-weight: 400;
}

table tr:hover .actions .button-group {
  opacity: 1;
}

table tr:last-child td {
  border-bottom: 0;
}

/**
 * 08. Title
 */

.page-title {
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
  margin: 0;
  padding: 22px 60px;
  position: relative;
}

@media (max-width: 992px) {
  .page-title {
    padding-left: 30px;
    padding-right: 30px;
  }
}

.has-page-header .page-title {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}

.page-title h1 {
  font-size: 20px;
  font-weight: 400;
  margin: 0 0 2px 0;
  padding: 0;
}

.has-page-header .page-title h1 {
  color: #fff;
  text-shadow: 1px 1px rgba(0, 0, 0, 0.3);
}

.page-title ul {
  font-size: 13px;
  list-style: none;
  margin: 0 0 6px 0;
  padding: 0;
}

.page-title ul:after {
  content: " ";
  display: block;
  clear: both;
}

.page-title li {
  opacity: .6;
  float: left;
}

.page-title li:after {
  content: '/';
  display: inline-block;
  margin: 0 10px;
  opacity: .5;
}

.page-title li:last-child:after {
  display: none;
}

.has-page-header .page-title li a {
  color: #fff;
  text-shadow: 1px 1px rgba(0, 0, 0, 0.3);
}

@media (max-width: 992px) {
  .page-title .shortcuts {
    display: none;
  }
}

/**
 * 09. Pagination
 */

.pagination {
  margin: 40px 0;
  padding: 0;
  text-align: center;
}

.pagination li {
  background-color: rgba(0, 0, 0, 0.04);
  cursor: pointer;
  display: inline-block;
  height: 40px;
  line-height: 40px;
  margin: 0 5px;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.pagination li a {
  display: block;
  height: 40px;
  line-height: 40px;
  padding: 0 16px;
}

.pagination li a:focus {
  outline: none;
}

.pagination li.break {
  padding: 0 16px;
}

.pagination li.disabled {
  cursor: normal !important;
  opacity: .5;
}

.pagination li.selected {
  background-color: #78909C;
}

.pagination li.selected a {
  color: #fff;
}

/**
 * 10. Toolbar
 */

.toolbar {
  background-color: #455A64;
  color: #fff;
  min-width: 64px;
  position: relative;
  width: 64px;
  z-index: 1000;
}

.toolbar img {
  max-width: 22px;
}

.toolbar .logo {
  background-color: rgba(255, 255, 255, 0.04);
  border-bottom: 1px solid rgba(255, 255, 255, 0.04);
  display: block;
  height: 89px;
  line-height: 104px;
  margin: 0 0 23px 0;
  text-align: center;
}

.toolbar .logo i {
  height: 30px;
  font-size: 30px;
  width: 30px;
}

.toolbar ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.toolbar ul a {
  color: #fff;
  cursor: pointer;
  display: block;
  padding: 9px 0;
  text-align: center;
  width: 64px;
}

.toolbar ul li {
  margin: 0 0 5px 0;
}

.toolbar ul ul,
.toolbar ul span,
.toolbar ul strong {
  display: none;
}

.toolbar strong {
  display: none;
}

@media (min-width: 1281px) {
  .toolbar .bottom {
    bottom: 0;
    position: absolute;
  }
}

.toolbar .navigation {
  display: none;
}

@media (max-width: 1281px) {
  .toolbar .navigation {
    display: block;
  }
}

.toolbar-inner {
  width: 64px;
}

@media (min-width: 1281px) {
  .toolbar-inner {
    bottom: 0;
    left: 0;
    position: fixed;
    top: 0;
  }
}

/******************************************************************
 * Toolbar actions
 ******************************************************************/

.toolbar-actions ul li {
  margin: 0 0 8px 0;
}

.toolbar-actions ul li a {
  color: #455A64;
  display: block;
  text-align: left;
  white-space: nowrap;
  width: auto;
}

.toolbar-actions ul li a .md-icon {
  color: #455A64;
  margin: 0 8px 0 0;
  vertical-align: middle;
}

.toolbar-actions ul li a span {
  color: #455A64;
  display: inline-block;
  vertical-align: middle;
}

.toolbar-actions ul li a:hover {
  color: #455A64;
}

.toolbar-actions ul li a:hover a span {
  color: #455A64;
}

.toolbar-actions ul li:last-child {
  margin-bottom: 0;
}

.toolbar-slide-overlay {
  background-color: rgba(0, 0, 0, 0.3);
  bottom: 0;
  content: '';
  left: 0;
  position: fixed;
  opacity: 0;
  right: 0;
  top: 0;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  -webkit-transition: opacity .2s ease;
  transition: opacity .2s ease;
  z-index: 999;
}

.toolbar-actions-open .toolbar-actions .toolbar-slide-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.toolbar-search-open .toolbar-search .toolbar-slide-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.toolbar-slide-inner {
  bottom: 0;
  color: #455A64;
  left: 0;
  position: absolute;
  top: 0;
  -webkit-transform: translateX(-100%);
          transform: translateX(-100%);
  width: 324px;
  z-index: 9999;
}

.toolbar-slide .toolbar-slide-inner {
  background-color: #fff;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.toolbar-actions-open .toolbar-actions .toolbar-slide-inner {
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.toolbar-search-open .toolbar-search .toolbar-slide-inner {
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.toolbar-slide-close {
  background-color: #EE5342;
  border-radius: 50%;
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  color: #fff;
  cursor: pointer;
  height: 32px;
  left: 15px;
  position: absolute;
  text-align: center;
  top: 116px;
  width: 32px;
}

.toolbar-actions .toolbar-slide-close {
  top: 116px;
}

.toolbar-search .toolbar-slide-close {
  top: 163px;
}

.toolbar-slide-close .md-icon {
  margin-top: 6px;
}

.toolbar-slide .toolbar-slide-close {
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
  color: #3E3E3E;
}

.toolbar-slide-content {
  background-color: #fff;
  padding: 30px 24px;
  position: relative;
}

.toolbar-actions .toolbar-slide-content {
  margin: 110px 0 0 64px;
}

.toolbar-slide .toolbar-actions .toolbar-slide-content {
  margin-top: 125px;
}

.toolbar-search .toolbar-slide-content {
  margin: 159px 0 0 64px;
}

.toolbar-slide-content strong {
  color: rgba(69, 90, 100, 0.6);
  display: block;
  font-size: 12px;
  font-weight: 500;
  margin: 0 0 14px 0;
  text-transform: uppercase;
}

.toolbar-slide .toolbar-slide-content {
  -webkit-box-shadow: none;
          box-shadow: none;
  padding: 0 30px 0 0;
}

.toolbar-slide-content:before {
  border: 4px solid transparent;
  border-top-color: #fff;
  border-right-color: #fff;
  content: '';
  display: block;
  height: 0;
  left: -8px;
  position: absolute;
  top: 0;
  width: 0;
}

.toolbar-slide .toolbar-slide-content:before {
  display: none;
}

.toolbar-slide-results {
  margin-top: 30px;
}

.toolbar-slide-results span,
.toolbar-slide-results strong {
  display: block;
}

.toolbar-slide-results span {
  color: rgba(69, 90, 100, 0.6);
  margin: 0 0 3px 0;
}

.toolbar-slide-results strong {
  color: #455A64;
  display: block;
  font-size: 14px;
  font-weight: 400;
  margin: 0;
  text-transform: none;
}

.toolbar-slide-result {
  border-bottom: 1px solid rgba(62, 62, 62, 0.06);
  margin: 0 0 15px 0;
  padding: 0 0 15px 0;
}

.toolbar-slide-result:last-child {
  border-bottom: 0;
  margin-bottom: 0;
  padding-bottom: 0;
}

/**
 * 11. Progress
 */

.progress {
  background-color: rgba(0, 0, 0, 0.06);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  height: 24px;
  padding: 5px;
  min-width: 170px;
}

.progress-inner {
  background-color: #455A64;
  background-image: -webkit-gradient(linear, left top, right top, from(#a1b2ba), to(#bfcad0));
  background-image: linear-gradient(to right, #a1b2ba, #bfcad0);
  height: 14px;
}

.progress-description {
  display: block;
  font-style: italic;
  font-size: 12px;
  margin: 5px 0 0 0;
  opacity: .8;
}

.progress-description .md-icon {
  color: rgba(0, 0, 0, 0.2);
  font-size: 12px;
  height: 12px;
  margin: 0 0 0 6px;
  vertical-align: -2px;
  width: 12px;
}

.progress-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin-bottom: 10px;
}

.progress-wrapper .avatar {
  background-image: url("/img/tmp/user-5.jpg");
}

.progress-content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

.progress-status {
  background-color: #a1b2ba;
  color: #fff;
  float: left;
  font-size: 12px;
  font-weight: 700;
  height: 32px;
  line-height: 32px;
  margin: 0 12px 0 0;
  text-align: center;
  width: 40px;
}

.panel .progress {
  max-width: 100%;
  margin-top: 20px;
}

.progress-grid {
  margin-bottom: -30px;
}

.progress-grid:after {
  content: " ";
  display: block;
  clear: both;
}

.progress-grid > div {
  margin-bottom: 30px;
}

@media (min-width: 992px) and (max-width: 992px) {
  .progress-grid > div {
    width: 48.27586207%;
    float: left;
    margin-right: 3.44827586%;
  }

  .progress-grid > div:nth-child(2n) {
    float: right;
    margin-right: 0;
  }
}

@media (min-width: 992px) {
  .progress-grid > div {
    width: 31.03448276%;
    float: left;
    margin-right: 3.44827586%;
  }

  .progress-grid > div:nth-child(3n) {
    float: right;
    margin-right: 0;
  }
}

/**
 * 12. Dashboard
 */

@media (min-width: 576px) {
  .dashboard {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    height: 100%;
  }
}

.dashboard-contact-container {
  width: 50%;
  float: left;
}

.dashboard-right-container {
  width: 50%;
  float: left;
}

/**
 * 13. Filter
 */

/**
 * 14. Panel
 */

.panel {
  border-right: 1px solid rgba(0, 0, 0, 0.06);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  float: left;
  min-height: 100%;
  padding: 30px 0 0;
}

@media (max-width: 576px) {
  .panel {
    border-right: 0;
  }
}

.panel p {
  word-wrap: break-word;
  white-space: normal;
}

.panel-user {
  margin: -5px 0 0 0;
  padding: 0;
  position: relative;
}

.panel-user:after {
  content: " ";
  display: block;
  clear: both;
}

@media (max-width: 576px) {
  .panel-user {
    margin-top: 0;
  }
}

.panel-user-avatar {
  background-color: rgba(0, 0, 0, 0.04);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  border-radius: 50%;
  display: inline-block;
  height: 42px;
  margin: 0 12px 0 0;
  vertical-align: middle;
  width: 42px;
}

.panel-user-action {
  cursor: pointer;
  margin-top: -18px;
  margin-right: 18px;
  opacity: .2;
  position: absolute;
  right: 3px;
  top: 20%;
}

.panel-user-action:hover {
  opacity: 1;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.panel-user-available-actions {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
}

.panel-user-available-actions .user-action-box {
  padding: 20px;
  width: 33%;
  vertical-align: center;
  text-align: center;
  cursor: pointer;
}

.panel-user-available-actions .user-action-box:nth-child(2) {
  border-left: 1px solid rgba(0, 0, 0, 0.06);
  border-right: 1px solid rgba(0, 0, 0, 0.06);
}

.panel-user-content {
  display: inline-block;
  vertical-align: middle;
  padding: 0 20px;
}

.panel-user-name {
  font-size: 16px;
  font-weight: 500;
}

.panel-user-subtitle {
  font-size: 13px;
  margin: 3px 0 0 0;
  opacity: .6;
}

.panel-list {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.panel-list ul {
  list-style: none;
  margin: 0 0 30px 0;
  padding: 0;
}

.panel-list li {
  line-height: 22px;
  margin: 0 0 15px 0;
  padding: 0 0 0 12px;
  position: relative;
}

.panel-list li a {
  text-decoration: underline;
}

.panel-list li:before {
  background-color: rgba(62, 62, 62, 0.2);
  border-radius: 50%;
  content: '';
  display: inline-block;
  height: 3px;
  left: 0;
  position: absolute;
  top: 10px;
  width: 3px;
}

.panel-list-title {
  font-size: 11px;
  font-weight: 700;
  margin: 0 0 15px 0;
  padding: 0 0 10px 0;
  text-transform: uppercase;
}

.panel-actions {
  margin-top: auto;
  padding: 20px 20px 0;
  border-top: 1px solid rgba(0, 0, 0, 0.06);
}

.panel-action-inner {
  display: block;
  padding: 30px;
}

.panel-contact-details {
  overflow: scroll;
}

.panel-contact-details #contact-details-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.panel-contact-details #contact-details-form .panel-contact-details-column {
  padding: 0 20px;
  width: 48%;
}

.panel-contact-details #contact-details-form .panel-contact-details-column:nth-child(1) {
  border-right: 1px solid rgba(0, 0, 0, 0.06);
}

.panel-contact-details {
  overflow: scroll;
}

.panel-contact-details #contact-details-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.panel-contact-details #contact-details-form .panel-contact-details-column {
  padding: 0 20px;
  width: 48%;
}

.panel-contact-details #contact-details-form .panel-contact-details-column:nth-child(1) {
  border-right: 1px solid rgba(0, 0, 0, 0.06);
}

.panel-account-details #account-details-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.panel-account-details #account-details-form .panel-account-details-column {
  padding: 0 20px;
  width: 48%;
}

.panel-account-details #account-details-form .panel-account-details-column:nth-child(1) {
  border-right: 1px solid rgba(0, 0, 0, 0.06);
}

.panel-opportunity-details #opportunity-details-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.panel-opportunity-details #opportunity-details-form .panel-opportunity-details-column {
  padding: 0 20px;
  width: 48%;
}

.panel-opportunity-details #opportunity-details-form .panel-opportunity-details-column:nth-child(1) {
  border-right: 1px solid rgba(0, 0, 0, 0.06);
}

.entity-history {
  list-style: none;
}

.entity-history li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row;
          flex-flow: row;
  position: relative;
  padding-bottom: 20px;
}

.entity-history li span.line-number {
  margin-right: 20px;
  text-align: center;
  width: 3em;
  height: 3em;
  line-height: 3em;
  border-radius: 50%;
  background-color: #AEBEC5;
  z-index: 3003;
}

.entity-history li span.line {
  position: absolute;
  height: 100%;
  border: 0.01em solid rgba(174, 190, 197, 0.8);
  top: 1em;
  left: 1.4em;
  background: rgba(174, 190, 197, 0.8);
  z-index: 3002;
}

.entity-history li .line-content h4 {
  margin: 0;
}

.entity-history li .line-content p {
  margin: 0;
}

/**
 * 15. Stats
 */

.stats-wrapper:after {
  content: " ";
  display: block;
  clear: both;
}

.stat-item {
  border-right: 1px solid rgba(0, 0, 0, 0.06);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 45px 0;
  position: relative;
}

.stat-item:first-child {
  margin-left: 0;
}

@media (max-width: 576px) {
  .stat-item {
    border: 0;
    margin: 0 0 30px 0;
  }

  .stat-item:last-child {
    margin-bottom: 0;
  }
}

@media (min-width: 576px) and (max-width: 992px) {
  .stat-item {
    width: 48.27586207%;
    float: left;
    margin-right: 3.44827586%;
    margin-bottom: 30px;
  }

  .stat-item:nth-child(2n) {
    float: right;
    margin-right: 0;
    border-right: 0;
  }

  .stat-item:nth-last-child(1),
  .stat-item:nth-last-child(2) {
    margin-bottom: 0;
  }
}

@media (max-width: 992px) {
  .stat-item {
    margin: 0;
    padding: 30px 0;
  }
}

@media (min-width: 992px) {
  .stat-item {
    width: 23.72881356%;
    float: left;
    margin-right: 1.69491525%;
  }

  .stat-item:last-child {
    float: right;
    margin-right: 0;
    border-right: 0;
  }
}

.stat-item-title {
  margin: 10px 0 5px 0;
}

.stat-item-value {
  font-size: 30px;
}

.stat-item-subtitle {
  opacity: .5;
  -webkit-transition: all .2 ease;
  transition: all .2 ease;
}

.stat-item-label {
  background-color: rgba(0, 0, 0, 0.06);
  color: rgba(62, 62, 62, 0.8);
  font-size: 12px;
  font-weight: 700;
  line-height: 1;
  margin-top: -12px;
  padding: 6px 8px;
  position: absolute;
  right: 15px;
  top: 50%;
}

.stat-item-label.raising {
  background-color: #32B67A;
  color: #fff;
}

.stat-item-label.descreasing {
  background-color: #EE5342;
  color: #fff;
}

@media (max-width: 576px) {
  .stat-item-label {
    right: 0;
  }
}

/**
 * 16. Box
 */

.box {
  margin: 60px;
}

.box:after {
  content: " ";
  display: block;
  clear: both;
}

@media (max-width: 992px) {
  .box {
    margin-left: 30px;
    margin-right: 30px;
  }
}

.box.border-bottom {
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
  margin-bottom: 60px;
  padding-bottom: 60px;
}

.box.bordered {
  border: 1px solid rgba(0, 0, 0, 0.06);
  margin: 20px;
  padding: 20px;
}

.box.side-margins {
  margin-left: 0;
  margin-right: 0;
  padding-left: 60px;
  padding-right: 60px;
}

@media (max-width: 992px) {
  .box.side-margins {
    padding-left: 30px;
    padding-right: 30px;
  }
}

.box.no-vertical-distance {
  margin-bottom: 0;
  margin-top: 0;
  padding-bottom: 0;
  padding-top: 0;
}

.box h3 {
  display: block;
  font-size: 14px;
  font-weight: 400;
  margin: 0 0 30px 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: #7F8388;
}

.box .jumbo {
  font-size: 120px;
  font-weight: bold;
}

/**
 * 17. Infobox
 */

@media (min-width: 992px) and (max-width: 1281px) {
  .projects .infobox,
  .members .infobox {
    width: 49.15254237%;
    float: left;
    margin-right: 1.69491525%;
  }

  .projects .infobox:nth-child(2n),
  .members .infobox:nth-child(2n) {
    float: right;
    margin-right: 0;
  }
}

@media (min-width: 1281px) {
  .projects .infobox,
  .members .infobox {
    width: 32.20338983%;
    float: left;
    margin-right: 1.69491525%;
  }

  .projects .infobox:nth-child(3n),
  .members .infobox:nth-child(3n) {
    float: right;
    margin-right: 0;
  }
}

.infobox {
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.06);
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin-bottom: 30px;
  padding: 30px;
  position: relative;
  top: 0;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.infobox:hover {
  -webkit-box-shadow: 0 0 12px rgba(62, 62, 62, 0.08);
          box-shadow: 0 0 12px rgba(62, 62, 62, 0.08);
  top: -3px;
}

.accounts .infobox,
.opportunities .infobox {
  max-width: 50%;
  min-width: 33.33%;
}

.infobox-header {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.06);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  padding: 0 0 30px 0;
}

.infobox-header h3 {
  color: #3E3E3E;
  font-size: 18px;
  font-weight: 500;
  margin: 0 0 6px 0;
}

.infobox-header h4 {
  color: rgba(69, 90, 100, 0.7);
  font-size: 14px;
  font-weight: 400;
  margin: 0;
}

.infobox-header-avatar {
  margin: 0 20px 0 0;
}

.infobox-header-avatar span {
  background-color: rgba(0, 0, 0, 0.04);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  border-radius: 50%;
  display: block;
  height: 46px;
  width: 46px;
}

.infobox-header-action {
  margin-left: auto;
}

.infobox-content p {
  color: rgba(69, 90, 100, 0.7);
  line-height: 24px;
  margin: 0;
}

.infobox-content-properties {
  list-style: none;
  margin: 0 0 15px 0;
  padding: 0;
}

.infobox-content-properties li {
  line-height: 24px;
}

.infobox-content-properties li span {
  color: rgba(69, 90, 100, 0.7);
}

.infobox-content-properties li strong {
  font-weight: 400;
}

.infobox-meta ul {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  list-style: none;
  margin: 0;
  padding: 0;
}

.infobox-meta ul li {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}

.infobox-meta span,
.infobox-meta strong {
  display: block;
}

.infobox-meta span {
  color: rgba(69, 90, 100, 0.7);
  margin: 0 0 5px 0;
}

.infobox-meta strong {
  font-size: 14px;
  font-weight: 400;
}

.infobox-content-avatars {
  border-top: 1px solid rgba(0, 0, 0, 0.06);
  margin: 30px 0 0 0;
  padding: 30px 0 0 0;
}

.infobox-content-avatars:after {
  content: " ";
  display: block;
  clear: both;
}

.infobox-content-avatars strong {
  float: left;
  font-weight: 400;
  line-height: 44px;
  margin: 0 20px 0 0;
}

.infobox-content-avatars ul {
  float: left;
  list-style: none;
  margin: 0;
  padding: 0;
}

.infobox-content-avatars li {
  float: left;
  margin-right: -12px;
  position: relative;
}

.infobox-content-avatars li:after {
  content: " ";
  display: block;
  clear: both;
}

.infobox-content-avatars li:first-child {
  margin-left: 0;
}

.infobox-content-avatars li:nth-child(1) span {
  z-index: 10;
}

.infobox-content-avatars li:nth-child(2) span {
  z-index: 9;
}

.infobox-content-avatars li:nth-child(3) span {
  z-index: 8;
}

.infobox-content-avatars li:nth-child(4) span {
  z-index: 7;
}

.infobox-content-avatars li:nth-child(5) span {
  z-index: 6;
}

.infobox-content-avatars li:nth-child(6) span {
  z-index: 5;
}

.infobox-content-avatars li:nth-child(7) span {
  z-index: 4;
}

.infobox-content-avatars li:nth-child(8) span {
  z-index: 3;
}

.infobox-content-avatars li:nth-child(9) span {
  z-index: 2;
}

.infobox-content-avatars li:nth-child(10) span {
  z-index: 1;
}

.infobox-content-avatars span {
  background-color: rgba(0, 0, 0, 0.04);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  border: 2px solid #fff;
  border-radius: 50%;
  display: block;
  height: 40px;
  width: 40px;
}

/**
 * 18. Cards
 */

.cards-wrapper .card {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

@media (min-width: 992px) {
  .cards-wrapper .card {
    width: 23.72881356%;
    float: left;
    margin-right: 1.69491525%;
  }

  .cards-wrapper .card:nth-child(4n) {
    float: right;
    margin-right: 0;
  }
}

.card {
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  border: 1px solid rgba(0, 0, 0, 0.06);
  margin: 0 0 30px 0;
  padding: 20px;
  position: relative;
}

.card-close {
  cursor: pointer;
  opacity: .8;
  position: absolute;
  right: 12px;
  top: 12px;
}

.has-image .card-close {
  color: #fff;
}

.card-date {
  font-size: 12px;
  margin: 0 0 7px 0;
  opacity: .5;
}

.card-content {
  border-top: 1px solid rgba(0, 0, 0, 0.06);
  margin: 0 -20px;
  padding: 20px 20px 0 20px;
}

.card-title {
  display: block;
  font-size: 16px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.card-subtitle {
  display: block;
  margin: 6px 0 0 0;
  overflow: hidden;
  opacity: .8;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.card-filetype {
  color: #EE5342;
  margin: 13px 0 33px 0;
}

.card-filetype .md-icon {
  font-size: 80px;
  height: 80px;
  width: 80px;
}

.card-image {
  background-position: center center;
  background-size: cover;
  height: 150px;
  margin: -21px -21px 0 -21px;
}

/**
 * 19. Chartist
 */

@media (min-width: 992px) and (max-width: 1281px) {
  .ct-bar {
    stroke-width: 14px;
  }
}

@media (min-width: 1281px) {
  .ct-bar {
    stroke-width: 22px;
  }
}

.ct-grid {
  stroke: rgba(0, 0, 0, 0.05);
  stroke-dasharray: 0;
}

.graph-stage.ct-chart {
  height: 340px;
}

.graph-stage .ct-bar {
  stroke-width: 90px;
}

.gauge-charts {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.graph-leads.ct-chart {
  height: 300px;
}

.graph-score .ct-label {
  font-size: 40px;
  dominant-baseline: central;
  text-anchor: middle;
}

.gauge-chart .ct-label {
  font-size: 40px;
  dominant-baseline: central;
  text-anchor: middle;
}

.ct-series-a .ct-bar,
.ct-series-a .ct-line,
.ct-series-a .ct-point,
.ct-series-a .ct-slice-donut {
  cursor: pointer;
  stroke: #4f6277;
  -webkit-transition: stroke .2s ease;
  transition: stroke .2s ease;
}

.ct-series-a .ct-bar:hover,
.ct-series-a .ct-line:hover,
.ct-series-a .ct-point:hover,
.ct-series-a .ct-slice-donut:hover {
  stroke: rgba(79, 98, 119, 0.8);
}

.ct-series-b .ct-bar,
.ct-series-b .ct-line,
.ct-series-b .ct-point,
.ct-series-b .ct-slice-donut {
  cursor: pointer;
  stroke: #aebec5;
  -webkit-transition: stroke .2s ease;
  transition: stroke .2s ease;
}

.ct-series-b .ct-bar:hover,
.ct-series-b .ct-line:hover,
.ct-series-b .ct-point:hover,
.ct-series-b .ct-slice-donut:hover {
  stroke: rgba(174, 190, 197, 0.8);
}

.ct-series-c .ct-bar,
.ct-series-c .ct-line,
.ct-series-c .ct-point,
.ct-series-c .ct-slice-donut {
  cursor: pointer;
  stroke: #f0f0f0;
  -webkit-transition: stroke .2s ease;
  transition: stroke .2s ease;
}

.ct-series-c .ct-bar:hover,
.ct-series-c .ct-line:hover,
.ct-series-c .ct-point:hover,
.ct-series-c .ct-slice-donut:hover {
  stroke: rgba(240, 240, 240, 0.8);
}

.ct-series-d .ct-bar,
.ct-series-d .ct-line,
.ct-series-d .ct-point,
.ct-series-d .ct-slice-donut {
  cursor: pointer;
  stroke: #7f8388;
  -webkit-transition: stroke .2s ease;
  transition: stroke .2s ease;
}

.ct-series-d .ct-bar:hover,
.ct-series-d .ct-line:hover,
.ct-series-d .ct-point:hover,
.ct-series-d .ct-slice-donut:hover {
  stroke: rgba(127, 131, 136, 0.8);
}

.ct-label.ct-vertical.ct-start {
  color: #455A64;
}

.ct-chart-bar .ct-label.ct-horizontal.ct-end {
  color: #455A64;
  font-size: 11px;
  font-weight: 400;
  text-transform: uppercase;
}

/**
 * 20. Invoice
 */

.invoice-wrapper {
  border: 1px solid rgba(0, 0, 0, 0.06);
  margin: 0 auto;
  padding: 60px;
  width: 794px;
}

.invoice-header {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  border-bottom: 1px solid rgba(0, 0, 0, 0.04);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin: -60px -60px 60px -60px;
  padding: 60px 60px 60px 60px;
}

.invoice-logo {
  font-size: 22px;
  font-weight: 400;
}

.invoice-logo img {
  max-height: 50px;
}

.invoice-description {
  margin-left: auto;
  text-align: right;
}

.invoice-description span,
.invoice-description strong {
  display: block;
}

.invoice-description span {
  color: rgba(69, 90, 100, 0.6);
  margin: 10px 0 0 0;
}

.invoice-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin: -60px -60px 0 -60px;
  padding: 60px;
}

.invoice-info address {
  line-height: 22px;
}

.invoice-info h4 {
  margin-top: 0;
}

.invoice-info p {
  line-height: 22px;
}

.invoice-info ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.invoice-info li {
  line-height: 28px;
}

.invoice-info li strong {
  color: rgba(69, 90, 100, 0.6);
  font-weight: 400;
}

.invoice-info-client {
  border-right: 1px solid rgba(0, 0, 0, 0.04);
  padding: 30px;
  width: 50%;
}

.invoice-info-payment {
  padding: 30px;
  text-align: right;
  width: 50%;
}

.invoice-table {
  background-color: rgba(0, 0, 0, 0.02);
  margin: 0 -60px;
  padding: 60px;
}

.invoice-table table {
  margin: 0;
}

.invoice-summary {
  background-color: #3E3E3E;
  -webkit-box-align: right;
      -ms-flex-align: right;
          align-items: right;
  border-top: 1px solid rgba(0, 0, 0, 0.06);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  margin: 0 -61px -60px -61px;
  padding: 40px 61px;
  text-align: right;
}

.invoice-summary > div {
  margin: 0 0 0 60px;
}

.invoice-summary > div:first-child {
  margin-left: auto;
}

.invoice-summary span,
.invoice-summary strong {
  display: block;
}

.invoice-summary span {
  color: rgba(255, 255, 255, 0.7);
  margin: 0 0 5px 0;
  text-align: right;
}

.invoice-summary strong {
  color: #fff;
  font-size: 28px;
  font-weight: 300;
  text-align: right;
}

/**
 * 21. Headquarters
 */

/**
 * 22. Stacks
 */

.stacks {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  height: calc(100% + 60px);
  margin: -30px 0 0 0;
}

@media (max-width: 992px) {
  .stacks {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin: 0;
  }
}

.stack-wrapper {
  border-right: 1px solid rgba(62, 62, 62, 0.08);
  padding: 0 60px;
}

@media (max-width: 992px) {
  .stack-wrapper {
    border: 0;
    padding: 0;
  }
}

.stack-wrapper h2 {
  border-bottom: 1px solid rgba(62, 62, 62, 0.08);
  font-size: 18px;
  font-weight: 300;
  margin: 60px 0 30px 0;
  padding: 0 0 20px 0;
}

@media (max-width: 992px) {
  .stack-wrapper h2 {
    margin-top: 0;
  }
}

.stack-wrapper h3 {
  font-size: 11px;
  font-weight: 500;
  margin: 0 0 20px 0;
  text-transform: uppercase;
}

.stack-wrapper:first-child {
  margin-left: -60px;
  padding-left: 60px;
}

@media (max-width: 992px) {
  .stack-wrapper:first-child {
    margin: 0;
    padding: 0;
  }
}

.stack-wrapper:last-child {
  border-right: 0;
  margin-right: -60px;
  padding-right: 60px;
}

@media (max-width: 992px) {
  .stack-wrapper:last-child {
    margin: 0;
    padding: 0;
  }
}

.stack-shortcuts {
  margin: 0 0 30px 0;
}

.stack-shortcuts ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.stack-shortcuts ul:after {
  content: " ";
  display: block;
  clear: both;
}

.stack-shortcuts li {
  float: left;
  margin: 0 10px 10px 0;
}

.stack-shortcuts a {
  background-color: rgba(62, 62, 62, 0.1);
  border-radius: 16px;
  font-size: 12px;
  display: block;
  padding: 8px 16px;
  -webkit-transition: all .2s ease;
  transition: all .2s ease;
}

.stack-shortcuts a:hover {
  background-color: #78909C;
  color: #fff;
}

.secondary .stack-shortcuts a:hover {
  background-color: #78909C;
}

.green .stack-shortcuts a:hover {
  background-color: #32B67A;
}

.red .stack-shortcuts a:hover {
  background-color: #EE5342;
}

.stack-actions ul {
  padding: 0;
}

.stack-actions ul li {
  display: block;
}

.stack-actions ul li a {
  display: block;
  padding: 12px 0;
}

.stack-actions ul li a span,
.stack-actions ul li a strong {
  display: inline-block;
  vertical-align: middle;
}

.stack-actions ul li a span {
  background-color: #455A64;
  border-radius: 50%;
  height: 38px;
  margin: 0 15px 0 0;
  text-align: center;
  width: 38px;
}

.stack-actions ul li a span .md-icon {
  color: #fff;
  margin: 9px 0 0 0;
}

.secondary .stack-actions ul li a span {
  background-color: #78909C;
}

.green .stack-actions ul li a span {
  background-color: #32B67A;
}

.red .stack-actions ul li a span {
  background-color: #EE5342;
}

.stack-actions ul li a strong {
  color: #455A64;
  font-weight: 400;
}

/**
 * 23. Shortcuts
 */

.shortcuts {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  position: absolute;
  right: 60px;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.shortcut-item {
  cursor: pointer;
  display: block;
  margin: 0 20px;
  padding: 0;
  text-align: center;
}

.has-page-header .shortcut-item {
  color: #fff;
}

.shortcut-item span {
  display: block;
  font-size: 11px;
  line-height: 1;
}

.shortcut-item:last-child {
  margin-right: 0;
}

/**
 * 24. Empty
 */

.page-empty {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  min-height: 100vh;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
}

.page-empty:after {
  background-color: #455A64;
  background-image: repeating-linear-gradient(-45deg, #455A64 0, #455A64 30px, #78909C 30px, #78909C 60px);
  content: '';
  display: block;
  height: 3px;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.page-empty-content {
  margin: 120px 0;
  width: 400px;
}

.page-empty-content h1 {
  font-size: 24px;
  font-weight: 400;
  border: 1px solid rgba(0, 0, 0, 0.06);
  border-bottom: 0;
  margin: 0;
  padding: 24px 30px;
}

.page-empty-content form {
  border: 1px solid rgba(0, 0, 0, 0.06);
  padding: 30px;
}

/**
 * 25. Page header
 */

.page-header {
  border-bottom: 1px solid rgba(62, 62, 62, 0.06);
}

.page-header h1 {
  font-size: 28px;
  font-weight: 300;
  line-height: 1.5;
  margin: 0;
  padding: 0;
}

@media (max-width: 992px) {
  .page-header h1 {
    font-size: 20px;
  }
}

.page-header p {
  color: rgba(69, 90, 100, 0.5);
  font-size: 16px;
  line-height: 1.5;
  margin: 10px 0 0 0;
  padding: 0;
}

.page-header-inner {
  margin: 0;
  padding: 30px 60px;
}

.page-header-inner:after {
  content: " ";
  display: block;
  clear: both;
}

@media (max-width: 992px) {
  .page-header-inner {
    padding: 30px;
  }
}

.page-header-content {
  padding-right: 170px;
  position: relative;
  width: auto;
}

@media (max-width: 992px) {
  .page-header-content {
    padding: 0;
  }
}

.page-header-info {
  color: #fff;
  display: block;
  position: absolute;
  right: 0;
  text-align: center;
  top: 50%;
  -webkit-transform: translateX(0%) translateY(-50%);
          transform: translateX(0%) translateY(-50%);
}

@media (max-width: 992px) {
  .page-header-info {
    display: none;
  }
}

.page-header-info span {
  background-color: #78909C;
  display: block;
  -webkit-filter: drop-shadow(1px 2px 3px rgba(0, 0, 0, 0.2));
          filter: drop-shadow(1px 2px 3px rgba(0, 0, 0, 0.2));
  line-height: 20px;
  padding: 8px 16px;
  position: relative;
}

.page-header-info span:after {
  border: 4px solid transparent;
  border-right-color: #78909C;
  content: '';
  display: block;
  height: 0;
  left: 0;
  position: absolute;
  top: 50%;
  -webkit-transform: translateX(-100%) translateY(-50%);
          transform: translateX(-100%) translateY(-50%);
  width: 0;
  z-index: 10;
}

.page-header-info h2 {
  margin: 5px;
}

/**
 * 26. Footer
 */

.footer {
  border-top: 1px solid rgba(0, 0, 0, 0.06);
  font-size: 13px;
  margin: 0;
  padding: 30px 60px;
}

.footer:after {
  content: " ";
  display: block;
  clear: both;
}

@media (max-width: 992px) {
  .footer {
    padding: 30px;
  }
}

.footer ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.footer ul:after {
  content: " ";
  display: block;
  clear: both;
}

@media (max-width: 992px) {
  .footer ul {
    border-top: 1px solid rgba(0, 0, 0, 0.06);
    margin-top: 20px;
  }
}

.footer ul li {
  float: left;
  margin: 0 0 0 25px;
}

.footer ul li a {
  display: block;
}

@media (max-width: 992px) {
  .footer ul li {
    float: none;
    margin: 20px 0;
  }

  .footer ul li:last-child {
    margin-bottom: 0;
  }
}

.footer-left {
  line-height: 1.5;
}

@media (min-width: 992px) {
  .footer-left {
    float: left;
  }
}

@media (min-width: 992px) {
  .footer-right {
    float: right;
  }
}

/**
 * 27. Loader
 */

.loading-wrapper .loading-item {
  background: #fff;
  border-top: 1px solid;
  border-color: #e5e6e9 #dfe0e4 #d0d1d5;
  padding: 12px;
  margin: 0 auto;
  min-height: 56px;
}

.loading-wrapper .loading-item .loading-animated-background {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
  -webkit-animation-name: placeHolderShimmer;
          animation-name: placeHolderShimmer;
  -webkit-animation-timing-function: linear;
          animation-timing-function: linear;
  background: #f6f7f8;
  background: -webkit-gradient(linear, left top, right top, color-stop(8%, #eeeeee), color-stop(18%, #dddddd), color-stop(33%, #eeeeee));
  background: linear-gradient(to right, #eeeeee 8%, #dddddd 18%, #eeeeee 33%);
  background-size: 800px 104px;
  height: 56px;
  position: relative;
}

@-webkit-keyframes placeHolderShimmer {
  0% {
    background-position: -468px 0;
  }

  100% {
    background-position: 468px 0;
  }
}

@keyframes placeHolderShimmer {
  0% {
    background-position: -468px 0;
  }

  100% {
    background-position: 468px 0;
  }
}

.loading-masker {
  background: #fff;
  position: absolute;
}

.loading-masker.header-top,
.loading-masker.header-bottom,
.loading-masker.subheader-bottom {
  top: 0;
  left: 40px;
  right: 0;
  height: 10px;
}

.loading-masker.header-left,
.loading-masker.subheader-left,
.loading-masker.header-right,
.loading-masker.subheader-right {
  top: 10px;
  left: 40px;
  height: 8px;
  width: 10px;
}

.loading-masker.header-bottom {
  top: 18px;
  height: 6px;
}

.loading-masker.subheader-left,
.loading-masker.subheader-right {
  top: 24px;
  height: 6px;
}

.loading-masker.header-right,
.loading-masker.subheader-right {
  width: auto;
  left: 300px;
  right: 0;
}

.loading-masker.subheader-right {
  left: 230px;
}

.loading-masker.subheader-bottom {
  top: 30px;
  height: 10px;
}

.loading-masker.content-top,
.loading-masker.content-second-line,
.loading-masker.content-third-line,
.loading-masker.content-second-end,
.loading-masker.content-third-end,
.loading-masker.content-first-end {
  top: 40px;
  left: 0;
  right: 0;
  height: 6px;
}

.loading-masker.content-top {
  height: 20px;
}

.loading-masker.content-first-end,
.loading-masker.content-second-end,
.loading-masker.content-third-end {
  width: auto;
  left: 380px;
  right: 0;
  top: 60px;
  height: 8px;
}

.loading-masker.content-second-line {
  top: 68px;
}

.loading-masker.content-second-end {
  left: 420px;
  top: 74px;
}

.loading-masker.content-third-line {
  top: 82px;
}

.loading-masker.content-third-end {
  left: 300px;
  top: 88px;
}

/**
 * 28. Side Panels
 */

/**
 * Base Structure
 * All Overlays must have .side-overlay class
 * All panels must have .panel-side class
 */

.side-overlay {
  background-color: rgba(0, 0, 0, 0.3);
  bottom: 0;
  content: '';
  left: 0;
  position: fixed;
  opacity: 0;
  right: 0;
  top: 0;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  -webkit-transition: opacity .2s ease;
  transition: opacity .2s ease;
  z-index: 1000;
}

.side-panel {
  background-color: #fff;
  bottom: 0;
  position: fixed;
  right: 0;
  top: 0;
  -webkit-transform: translateX(100%);
          transform: translateX(100%);
  -webkit-transition: all .4s ease;
  transition: all .4s ease;
  width: 600px;
  z-index: 1001;
}

.side-panel .panel {
  width: 100%;
  height: 100%;
}

.side-panel .panel div:nth-child(2) {
  max-height: 100%;
  overflow: scroll;
  -webkit-box-flex: 2;
      -ms-flex-positive: 2;
          flex-grow: 2;
}

/**
 * Base Content Flyout
 */

.content-side-open .content-side-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.content-side-open .content-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

/**
 * Contact Flyouts
 */

.contact-side-overlay {
  z-index: 2000;
}

.contact-panel-open .contact-side-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-history-overlay {
  z-index: 3000;
}

.contact-history-panel-open .contact-history-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-edit-overlay {
  z-index: 3000;
}

.contact-edit-panel-open .contact-edit-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-note-overlay {
  z-index: 3000;
}

.contact-note-panel-open .contact-note-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-contact-overlay {
  z-index: 3000;
}

.contact-contact-panel-open .contact-contact-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-side {
  z-index: 2001;
}

.contact-panel-open .contact-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.action-panel-open .contact-side,
.contact-history-panel-open .contact-side,
.contact-edit-panel-open .contact-side,
.contact-note-panel-open .contact-side,
.contact-contact-panel-open .contact-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(-300px);
          transform: translateX(-300px);
}

.contact-history-side {
  z-index: 3001;
}

.contact-history-panel-open .contact-history-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-edit-side {
  z-index: 3001;
}

.contact-edit-panel-open .contact-edit-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-note-side {
  z-index: 3001;
}

.contact-note-panel-open .contact-note-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.contact-contact-side {
  z-index: 3001;
}

.contact-contact-panel-open .contact-contact-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

/**
 * Account Flyouts
 */

.account-side-overlay {
  z-index: 2000;
}

.account-panel-open .account-side-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.account-panel-side {
  z-index: 3001;
}

.account-panel-open .account-panel-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

/**
 * Account Flyouts
 */

.opportunity-side-overlay {
  z-index: 2000;
}

.opportunity-panel-open .opportunity-side-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.opportunity-panel-side {
  z-index: 3001;
}

.opportunity-panel-open .opportunity-panel-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

/**
 * VECTOR Flyouts
 */

.call-panel-overlay {
  z-index: 2000;
}

.call-panel-open .call-panel-overlay {
  opacity: 1;
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

.call-panel-side {
  z-index: 3001;
}

.call-panel-open .call-panel-side {
  -webkit-box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
  -webkit-transform: translateX(0);
          transform: translateX(0);
}

/**
 * 29. Tabs
 */

.tabbed-area section {
  margin: auto;
}

.tabbed-area .tab:hover,
.tabbed-area .tab:active,
.tabbed-area .tab.active {
  background: #ddd;
}

.tabbed-area .tab-pane {
  padding: 30px;
}

.ct-chart {
  position: relative;
}

.ct-chart .chartist-tooltip {
  border-radius: 3px;
  background: rgba(79, 98, 119, 0.7);
  color: #F0F0F0;
}

.ct-chart .chartist-tooltip:before {
  border-top-color: rgba(79, 98, 119, 0.7);
}

.ct-chart .chartist-tooltip .chartist-tooltip-value {
  display: none;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/